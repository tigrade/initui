{"version":3,"file":"static/js/977.381185e8.chunk.js","mappings":"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","sources":["views/login/index.jsx","views/platform/default/index.jsx","views/platform/case/index.jsx","views/platform/case/new/index.jsx","views/manager/default/index.jsx","views/manager/module/module.jsx","views/manager/module/form.jsx","views/manager/module/index.jsx","views/manager/roleResource/module.jsx","views/manager/roleResource/form.jsx","views/manager/roleResource/menu.jsx","views/manager/roleResource/formToMenu.jsx","views/manager/roleResource/index.jsx","views/manager/userRole/form.jsx","views/manager/userRole/index.jsx","views/manager/resource/form.jsx","views/manager/resource/module.jsx","views/manager/resource/index.jsx","views/manager/role/form.jsx","views/manager/role/index.jsx","views/manager/user/index.jsx"],"sourcesContent":["import React,{DSBase,DSComponent,Fragment,post} from 'comp/index';\nimport './index.less'\nimport * as THREE from \"three\";\n// import * as Stats from \"stats-js\";\n\nimport { InfoCircleOutlined} from '@ant-design/icons';\nimport { Form, Input,Button ,Checkbox,Row, Col,Modal,Image,message} from 'antd';\n\nclass LoginView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.bgRef = React.createRef();\n        this.loginFormRef = React.createRef();\n        this.regeditFormRef = React.createRef();\n        this.resetFormRef = React.createRef();\n        let loginAccount;\n        let loginRemember = localStorage.getItem(\"remember\");\n        if(loginRemember===\"true\"){\n            loginRemember = true;\n            loginAccount = localStorage.getItem(\"account\");\n        }else{\n            loginRemember = false;\n        }\n        // formType: Login|Regedit|Forget\n        this.state = {formType:\"Login\",captchShow:false,count:60,liked:true,needCaptcha:false,loginAccount:loginAccount,loginRemember:loginRemember}\n    }\n    componentDidMount=()=>{\n        this.initTHREEBg();\n        \n    }\n    componentDidUpdate=()=>{\n    }\n    // componentWillReceiveProps=(nextProps,nextContext)=>{\n    //     setTimeout(()=>this.onCountDown,1000);\n    // }\n\n    initTHREEBg=()=>{\n        // const stats = new Stats()\n        // stats.showPanel(1) // 0: fps, 1: ms, 2: mb, 3+: custom\n        // document.body.appendChild(stats.dom)\n        const SEPARATION = 100; \n        const AMOUNTX = 50; //控制x轴波浪的长度\n        const AMOUNTY = 50; //控制y轴波浪的长度\n        let container;\n        let camera, scene, renderer;\n        let particles; let particle; let count = 0;\n        let mouseX = 0;\n        let mouseY = 0;\n        let windowHalfX = window.innerWidth / 2;\n        let windowHalfY = window.innerHeight / 2;\n\n        const init = (kk) => {\n            container = document.createElement('div')\n            this.bgRef.current.appendChild(container)\n            \n\n            camera = new THREE.PerspectiveCamera(\n                75, //摄像机视锥体垂直视野角度\n                window.innerWidth / window.innerHeight, //摄像机视锥体长宽比\n                1, //摄像机视锥体近端面\n                10000 //摄像机视锥体远端面\n            );\n            //设置相机z轴视野\n            camera.position.z = 1000;\n            //创建场景\n            scene = new THREE.Scene();\n\n            // 添加背景图\n            // const texture = new THREE.TextureLoader().load(`${process.env.PUBLIC_URL+'/bg.png'}`);\n            // scene.background = texture;\n\n            particles = [];\n            const material = new THREE.SpriteMaterial({\n                map: new THREE.TextureLoader().load(`${process.env.PUBLIC_URL+'/disc.png'}`),\n                color: \"#7ec1ff\",\n            })\n\n            // 初始化粒子位置和大小\n            let i = 0\n            for (let ix = 0; ix < AMOUNTX; ix++) {\n                for (let iy = 0; iy < AMOUNTY; iy++) {\n                    particle = particles[i++] = new THREE.Sprite(material);\n                    particle.position.x = ix * SEPARATION - ((AMOUNTX * SEPARATION) / 2);\n                    particle.position.z = iy * SEPARATION - ((AMOUNTY * SEPARATION) / 2);\n                    scene.add(particle);\n                }\n            }\n            // renderer = new THREE.CanvasRenderer();\n            renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n            // 设置透明度\n            renderer.setClearAlpha(0.2);\n            renderer.setSize(window.innerWidth, window.innerHeight);\n            container.appendChild(renderer.domElement);\n\n            document.addEventListener('mousemove', onDocumentMouseMove, false);\n            document.addEventListener('touchstart', onDocumentTouchStart, false)\n            document.addEventListener('touchmove', onDocumentTouchMove, false)\n            window.addEventListener('resize', onWindowResize, false);\n        }\n\n        const onWindowResize = () => {\n            windowHalfX = window.innerWidth / 2;\n            windowHalfY = window.innerHeight / 2;\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(window.innerWidth, window.innerHeight);\n        }\n\n        const onDocumentMouseMove = (event) => {\n            mouseX = event.clientX - windowHalfX;\n            if(event.clientY>125){\n                mouseY = 125 - windowHalfY;\n            }else{\n                mouseY = event.clientY - windowHalfY;\n            }\n            // console.log(`x:${event.clientX},y:${event.clientY}`)\n        }\n\n        const onDocumentTouchStart = (event) => {\n            if (event.touches.length === 1) {\n                event.preventDefault();\n                mouseX = event.touches[0].pageX - windowHalfX;\n                mouseY = event.touches[0].pageY - windowHalfY;\n            }\n        }\n\n        const onDocumentTouchMove = (event) => {\n            if (event.touches.length === 1) {\n                event.preventDefault();\n                mouseX = event.touches[0].pageX - windowHalfX;\n                mouseY = event.touches[0].pageY - windowHalfY;\n            }\n        }\n\n        const animate = () => {\n            // stats.begin()\n            // stats.end()\n            requestAnimationFrame(animate);\n            render();\n        }\n\n        const render = () => {\n            camera.position.x += (mouseX - camera.position.x) * 0.05;\n            camera.position.y += (-mouseY - camera.position.y) * 0.05;\n            camera.lookAt(scene.position);\n\n            let i = 0;\n            for (let ix = 0; ix < AMOUNTX; ix++) {\n                for (let iy = 0; iy < AMOUNTY; iy++) {\n                    particle = particles[i++];\n                    particle.position.y = (Math.sin((ix + count) * 0.3) * 50) + (Math.sin((iy + count) * 0.5) * 50);\n                    particle.scale.x = particle.scale.y = (Math.sin((ix + count) * 0.3) + 1) * 2 + (Math.sin((iy + count) * 0.5) + 1) * 2;\n                }\n            }\n\n            renderer.render(scene, camera);\n            count += 0.08;\n        }\n\n        // 初始化\n        init();\n        animate();\n    }\n\n    onChangeType=(formType,e)=>{\n        e.preventDefault();\n        this.setState(state=>{\n            state.formType = formType;\n            state.formStatus = false;\n            state.errorMessage = null;\n            return state;\n        });\n    }\n    onClickCaptcha=async (type,use)=>{\n        const params = new FormData();\n        params.append('type', type);\n        params.append('use', use);\n        let _account;\n        if(use===\"LOGIN_CODE\"){\n            const {account} = this.loginFormRef.current.getFieldsValue();\n            _account = account;\n        }\n        if(use===\"REGEDIT_CODE\"){\n            const {account} = this.regeditFormRef.current.getFieldsValue();\n            _account = account;\n        }\n        if(use===\"RESET_PASSWORD_CODE\"){\n            const {account} = this.resetFormRef.current.getFieldsValue();\n            _account = account;\n        }\n        if(_account===undefined||_account===null){\n            message.error(\"请需填写完整有效的邮箱号码\");\n            return false;\n        }\n        params.append('account', _account);\n        //获取验证码   /client/token\n        const response  = await post(`/api/client/token`,params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            const {check,token} = response.results;\n            this.setState(state=>{\n                if(check===true){\n                    state.captchShow = !state.captchShow;\n                    if(state.captchShow){\n                        state.liked = false;\n                    }\n                }\n                if(use===\"LOGIN_CODE\"){\n                    state.LOGIN_TOKEN = token;//登录TOKEN\n                }\n                if(use===\"REGEDIT_CODE\"){\n                    state.REGEDIT_TOKEN = token;//注册TOKEN\n                }\n                if(use===\"RESET_PASSWORD_CODE\"){\n                    state.RESET_PASSWORD_TOKEN = token;//重置密码\n                }\n                return state;\n            },(e)=>{\n                this.onCountDown();//获取验证码按钮倒计时\n            });\n        }\n    }\n    onCaptchaSubmit=(v)=>{\n\n    }\n    onCountDown=()=>{\n        const {count} = this.state;\n        if(count===1){\n            this.setState(state=>{\n                state.count = 60;\n                state.liked = true;\n                return state;\n            },(e)=>{\n                clearTimeout(this._execute)\n            });\n        }else{\n            this.setState(state=>{\n                state.count = state.count - 1;\n                state.liked = false;\n                return state;\n            },(e)=>{\n                this._execute = setTimeout(()=>{this.onCountDown()},1000);\n            });\n        }\n    }\n\n    onLogin=async (e)=>{\n        const {account,password,remember} = e;\n        const params = new FormData();\n        params.append('username', account);\n        params.append('password', password);\n        const response  = await post(`/api/sign_in`,params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            if(remember===true){\n                localStorage.setItem(\"remember\",true);\n                localStorage.setItem(\"account\",account);\n            }else{\n                localStorage.removeItem(\"remember\");\n                localStorage.removeItem(\"account\");\n            }\n            sessionStorage.setItem('isLogin', true);\n            sessionStorage.setItem('token', response.results.token);\n            window.location.href = DSBase.root.path;\n        }\n    }\n    onRegedit=async (e)=>{\n        const {alias,account,password,checkCode,agree} = e;\n        if(agree!==true){\n            message.error(\"请同意平台协议方可注册\");\n            return false;\n        }\n        const {REGEDIT_TOKEN} = this.state;\n        const data = {'type':\"EMAIL\",'alias':alias,'account':account,'password':password,'checkCode':checkCode,'token':REGEDIT_TOKEN};\n        const params = new FormData();\n        params.append('content', JSON.stringify(data));\n        const response  = await post(`/api/client/regedit`,params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            sessionStorage.setItem('isLogin', true);\n            sessionStorage.setItem('token', response.results.token);\n            window.location.href = DSBase.root.path;\n        }\n    }\n    onReset=async(e)=>{\n        const {account,password,checkCode} = e;\n        const {RESET_PASSWORD_TOKEN} = this.state;\n        const data = {'account':account,'password':password,'checkCode':checkCode,'token':RESET_PASSWORD_TOKEN};\n        const params = new FormData();\n        params.append('content', JSON.stringify(data));\n        const response  = await post(`/api/client/reset/password`,params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            sessionStorage.setItem('isLogin', true);\n            sessionStorage.setItem('token', response.results.token);\n            window.location.href = DSBase.root.path;\n        }\n    }\n\n    render(){\n        //formStatus:false,errorMessage:null\n        const {formType,count,liked,needCaptcha,loginAccount,loginRemember} = this.state;\n        console.log(loginAccount);\n        return (\n        <Fragment>\n            <Modal\n                title={<span className='security-title'>安全验证</span>}\n                centered\n                maskClosable={false}\n                visible={this.state.captchShow}\n                width={350}\n                onCancel={this.onClickCaptcha}\n                closable={true}\n                footer={null}>\n                    <Form layout=\"vertical\" size='small' onFinish={this.onCaptchaSubmit}>\n                        <Form.Item label=\"图像验证码\" required tooltip=\"看不清,在图片上方点击更换验证码\">\n                            <Row wrap={false}>\n                                <Col flex=\"150px\">\n                                    <Form.Item name=\"code\" rules={[{ required: true ,message: '请输入正确的验证码!'}]} noStyle>\n                                        <Input placeholder=\"输入验证码\" size=\"large\" maxLength={10} style={{\"width\":120}} allowClear={true} autoComplete=\"off\"/>\n                                    </Form.Item>\n                                </Col>\n                                <Col flex=\"auto\">\n                                    <Form.Item noStyle>\n                                        <Image\n                                            preview={false}\n                                            width={150}\n                                            height={40}\n                                            src=\"/api/client/captcha\"\n                                        />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        </Form.Item>    \n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" className={'login-form-button'} size=\"large\" style={{\"width\":\"100%\"}}>确认</Button>\n                        </Form.Item>\n                    </Form>\n            </Modal>\n            <div className={'main-wrap'}>\n                <div className={'login'}>\n                    <div className={'login-title'}>\n                        <h1>鱼律</h1>\n                        <h5>鱼律科技 一律给力</h5>\n                    </div>\n                    {/* 用户登录 */}\n                    <div className={'login-wrap'} style={{\"display\":formType===\"Login\"?\"block\":\"none\"}}>\n                        <Form layout=\"vertical\" size='small' onFinish={this.onLogin} ref={this.loginFormRef} \n                            initialValues={{\"account\":loginAccount,\"remember\":loginRemember}}>\n                            <Form.Item name=\"account\" label=\"账号\" required tooltip=\"请输入有效账号\" rules={[{ required: true, message: '请输入有效账号' }]} >\n                                <Input placeholder=\"请输入有效邮箱账号\" size=\"large\" autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item name=\"password\" label=\"密码\"  required tooltip={{ title: '请输入有效密码', icon: <InfoCircleOutlined /> }} \n                                rules={[{ required: true, message: '请输入有效密码' }]}>\n                                <Input.Password placeholder=\"请输入有效密码\" size=\"large\" autoComplete=\"off\"/>\n                            </Form.Item>\n                            {needCaptcha&&\n                            <Form.Item label=\"验证码\"  required tooltip={{ title: '请输入有效验证码', icon: <InfoCircleOutlined /> }}>\n                                <Row gutter={8}>\n                                    <Col flex=\"180px\">\n                                        <Form.Item name=\"checkCode\" noStyle>\n                                            <Input size=\"large\" autoComplete=\"off\" style={{\"width\":180}}/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col flex={'auto'}>\n                                        <Button size=\"large\" onClick={this.onClickCaptcha.bind(this,\"EMAIL\",\"LOGIN_CODE\",)} disabled={liked?false:true} style={{\"width\":\"100%\"}}>{liked?\"获取验证码\":`(${count})秒后重试`}</Button>\n                                    </Col>\n                                </Row>\n                            </Form.Item>\n                            }\n                            <Form.Item>\n                                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                                    <Checkbox>记住我</Checkbox>\n                                </Form.Item>\n                                <a href='#' className={'login-form-forgot'} onClick={this.onChangeType.bind(this,\"Forget\")}>忘记密码</a>\n                            </Form.Item>\n                            \n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" className={'login-form-button'} size=\"large\">登录</Button>\n                                <span className={'login-to-regedit'}>或 <Button type=\"link\" onClick={this.onChangeType.bind(this,\"Regedit\")}>立即注册</Button></span>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                    {/* 忘记密码 */}\n                    <div className={'forget-wrap'} style={{\"display\":formType===\"Forget\"?\"block\":\"none\"}}>\n                        <Form layout=\"vertical\" size='small' ref={this.resetFormRef} onFinish={this.onReset}>\n                            <Form.Item name=\"account\" label=\"账号\" required tooltip=\"请输入有效账号\">\n                                <Input placeholder=\"请输入有效邮箱或手机\" size=\"large\" autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item name=\"password\" label=\"新的密码\"  required tooltip={{ title: '请输入新密码', icon: <InfoCircleOutlined /> }}>\n                                <Input.Password placeholder=\"请输入新密码\" size=\"large\" autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item label=\"验证码\"  required tooltip={{ title: '请输入有效验证码', icon: <InfoCircleOutlined /> }}>\n                                <Row gutter={8}>\n                                    <Col flex=\"180px\">\n                                        <Form.Item name=\"checkCode\" noStyle>\n                                            <Input size=\"large\" autoComplete=\"off\" style={{\"width\":180}}/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col flex={'auto'}>\n                                        <Button size=\"large\" onClick={this.onClickCaptcha.bind(this,\"EMAIL\",\"RESET_PASSWORD_CODE\",)} disabled={liked?false:true} style={{\"width\":\"100%\"}}>{liked?\"获取验证码\":`(${count})秒后重试`}</Button>\n                                    </Col>\n                                </Row>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" className={'login-form-button'} size=\"large\">重置密码</Button>\n                                <span className={'login-to-regedit'}>或去 <a href='' onClick={this.onChangeType.bind(this,\"Login\")}>登录</a></span>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                    \n                    {/* 注册用户 */}\n                    <div className={'regedit-wrap'} style={{\"display\":formType===\"Regedit\"?\"block\":\"none\"}}>\n                        <Form layout=\"vertical\" size='small' onFinish={this.onRegedit} ref={this.regeditFormRef}>\n                            <Form.Item name=\"alias\" label=\"用户名字\" required tooltip=\"请输入用户名字\" \n                                rules={[{ required: true, message: '请输入有效账号' }]} >\n                                <Input placeholder=\"请输入用户名字\" size=\"large\" autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item name=\"account\" label=\"邮箱\"  required tooltip={{ title: '请输入有效邮箱', icon: <InfoCircleOutlined /> }} \n                                rules={[{ required: true, message: '请输入有效邮箱' },{type: 'email',message: '请输入有效邮箱'}]} >\n                                <Input placeholder=\"请输入有效邮箱\" size=\"large\" autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item name=\"password\" label=\"登录密码\"  required tooltip={{ title: '请输入有效密码', icon: <InfoCircleOutlined /> }}\n                                rules={[{ required: true, message: '请输入有效密码' }]} >\n                                <Input.Password placeholder=\"请输入有效密码\" size=\"large\" autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item label=\"验证码\"  required tooltip={{ title: '请输入有效验证码', icon: <InfoCircleOutlined /> }}>\n                                <Row gutter={8}>\n                                    <Col flex=\"180px\">\n                                        <Form.Item name=\"checkCode\" noStyle \n                                            rules={[{ required: true, message: '请输入有效验证码' }]} >\n                                            <Input size=\"large\" autoComplete=\"off\" style={{\"width\":180}}/>\n                                        </Form.Item>\n                                    </Col>\n                                    <Col flex={'auto'}>\n                                        <Button size=\"large\" onClick={this.onClickCaptcha.bind(this,\"EMAIL\",\"REGEDIT_CODE\",)} disabled={liked?false:true} style={{\"width\":\"100%\"}}>{liked?\"获取验证码\":`(${count})秒后重试`}</Button>\n                                    </Col>\n                                </Row>\n                            </Form.Item>\n                            <Form.Item>\n                                <Form.Item name=\"agree\" valuePropName=\"checked\" noStyle \n                                    rules={[{ required: true, message: '用户需同意本平台协议方可注册' }]} >\n                                <Checkbox>已阅读并同意以下协议<a href='#'>鱼律平台服务协议</a>、<a href='#'>隐私权政策</a>、<a href='#'>法律声明</a>协议</Checkbox>\n                                </Form.Item>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" className={'login-form-button'} size=\"large\">注册</Button>\n                                <span className={'regedit-to-login'}>或 <a href='' onClick={this.onChangeType.bind(this,\"Login\")}>立即登录</a></span>\n                            </Form.Item>\n                            {/* <Divider>其他注册方式</Divider>\n                            <Tooltip title='手机注册'><Avatar style={{ backgroundColor: '#87d068' }} icon={<PhoneOutlined />} /></Tooltip>\n                            <Tooltip title='邮箱注册'><Avatar style={{ backgroundColor: '#87d068' }} icon={<MailOutlined />} /></Tooltip> */}\n                        </Form>\n                    </div>\n\n\n                </div>\n            </div> \n            <div className={'site-footer'}>\n                <div className={'banner'}>Copyright © 2018至今 鱼律（厦门）网络科技有限公司 All rights reserved.\n                    <a href=\"//beian.miit.gov.cn\" target=\"_blank\" rel=\"noreferrer\">闽ICP备18004543号-1</a>\n                </div>\n            </div>\n            <div ref={this.bgRef} className={'wall-bg'}/>\n\n        </Fragment>\n        );\n    }\n}\nexport default LoginView;","import React,{DSComponent,Fragment} from 'comp/index';\n\nimport './index.less'\n\nclass DefaultView extends DSComponent{   \n    componentDidMount=()=>{\n    }\n    render(){\n        return (\n        <Fragment>\n        </Fragment>\n        );\n    }\n}\nexport default DefaultView;","import React,{DSID,DSBase,DSComponent,DSNavigate,Fragment} from 'comp/index';\nimport { Input, Button, PageHeader,Row,Col,Tag,Space,Table,Breadcrumb } from 'antd';\nimport './index.less';\n\n// import DSNavigate from 'comp/nav/index';\n\nconst {Search} = Input;\nconst { CheckableTag } = Tag;\n\n  const sharedOnCell = (_, index) => {\n    return {};\n  };\n\n  \n\nclass CaseView extends DSComponent {\n    constructor(props){\n        super(props);\n        this.state = {pageNo:1}\n    }\n    componentDidMount = () => {\n    }\n    onChangePagination=(current)=>{\n        this.setState(state=>{\n            state.pageNo = current;\n            return state;\n        });\n    }\n    render() {\n        const {pageNo} = this.state\n        \n        const columns = [\n            {\n              title: '序号',\n              dataIndex: 'seq',\n              width: 70,\n              render: (value, item, index) => (pageNo - 1) * 10 + index + 1,\n            //   onCell: sharedOnCell,\n            },\n            {\n              title: '案件名称',\n              dataIndex: 'name',\n              \n              onCell: sharedOnCell,\n            },\n            {\n              title: '承办人',\n              dataIndex: 'q1',\n              width: 200,\n              onCell: sharedOnCell,\n            },\n            {\n              title: '进度',\n              dataIndex: 'q2',\n              width: 80,\n              onCell: sharedOnCell,\n            },\n            {\n              title: '任务',\n              dataIndex: 'q3',\n              width: 160,\n              onCell: sharedOnCell,\n            },\n            {\n                title: '状态',\n                dataIndex: 'q4',\n                width: 150,\n                onCell: sharedOnCell,\n            },\n            {\n                title: '创建时间',\n                dataIndex: 'q5',\n                width: 150,\n                onCell: sharedOnCell,\n            },\n            {\n                title: '关注',\n                dataIndex: 'q6',\n                width: 80,\n                onCell: sharedOnCell,\n            },\n          ];\n          const data = [\n            {id:1,name:\"诉讼案件\"}\n          ];\n        \n        return (\n            <Fragment>\n                <Breadcrumb style={{margin: '16px 12px',}}>\n                    <Breadcrumb.Item>首页</Breadcrumb.Item>\n                    <Breadcrumb.Item>案件管理</Breadcrumb.Item>\n                    {/* <Breadcrumb.Item>新增案件</Breadcrumb.Item> */}\n                </Breadcrumb>\n                <div style={{padding: \"0px 12px 12px\",minHeight: 280,}} >\n                    {/*搜索板块 */}\n                    <PageHeader className=\"site-page-header\" style={{background:\"#ffff\"}}>\n                        <Row wrap={false} style={{paddingBottom: \"16px\"}}>\n                            <Col flex=\"auto\">\n                                <Search key={DSID()} placeholder=\"请输入案件名称\" allowClear enterButton=\"搜索\" size=\"large\" onSearch={null}/>\n                            </Col>\n                            <Col flex=\"160px\" style={{paddingLeft: \"16px\"}}>\n                                <DSNavigate key={DSID()} url={DSBase.list.P_NewCaseView.path} element={<Button key={DSID()} size=\"large\">新增案件</Button>}/>\n                            </Col>\n                        </Row>\n\n                        <Space direction=\"vertical\" size=\"middle\" style={{ display: 'flex' }}>\n                            <Row>\n                                <Col flex=\"100px\">案件类型</Col>\n                                <Col flex=\"auto\">:\n                                    <CheckableTag color=\"default\" >全部</CheckableTag>\n                                    <CheckableTag color=\"default\" >诉讼</CheckableTag>\n                                    <CheckableTag color=\"default\"  checked={true}>仲裁</CheckableTag>\n                                    <CheckableTag color=\"default\" >顾问</CheckableTag>\n                                    <CheckableTag color=\"default\" >非诉</CheckableTag>\n                                    <CheckableTag color=\"default\" >其他</CheckableTag>\n                                </Col>\n                            </Row>\n\n                            <Row wrap={false}>\n                                <Col flex=\"100px\">客户名称</Col>\n                                <Col flex=\"auto\">:\n                                    <CheckableTag color=\"default\" >全部</CheckableTag>\n                                    <CheckableTag color=\"default\" >幸福地产</CheckableTag>\n                                    <CheckableTag color=\"default\"  checked={true}>世贸国际</CheckableTag>\n                                    <CheckableTag color=\"default\" >恒大地产</CheckableTag>\n                                    <CheckableTag color=\"default\" >中国移动</CheckableTag>\n                                    <CheckableTag color=\"default\" >中国电信</CheckableTag>\n                                    <CheckableTag color=\"default\" >厦门国贸</CheckableTag>\n                                \n                                </Col>\n                            </Row>\n\n                            <Row wrap={false}>\n                                <Col flex=\"100px\">进度</Col>\n                                <Col flex=\"auto\">:\n                                    <CheckableTag color=\"default\" >全部</CheckableTag>\n                                    <CheckableTag color=\"default\" >开盘前</CheckableTag>\n                                    <CheckableTag color=\"default\"  checked={true}>收集证据</CheckableTag>\n                                    <CheckableTag color=\"default\" >结案</CheckableTag>\n                                </Col>\n                            </Row>\n\n                            <Row wrap={false}>\n                                <Col flex=\"100px\">状态</Col>\n                                <Col flex=\"auto\">:\n                                    <CheckableTag color=\"default\" >全部</CheckableTag>\n                                    <CheckableTag color=\"default\" >进行中</CheckableTag>\n                                    <CheckableTag color=\"default\"  checked={true}>已完结</CheckableTag>\n                                </Col>\n                            </Row>\n\n                        </Space>\n                    </PageHeader>\n\n                    <div style={{marginTop:8,padding: \"8px 12px 24px\",background:\"#ffff\"}} >\n                        <Table columns={columns} dataSource={data} bordered pagination={{onChange:this.onChangePagination}} rowKey={record => DSID()}/>\n                    </div>\n                    \n                    \n                </div>\n                \n            </Fragment>\n        );\n    }\n}\nexport default CaseView;","import React,{DSComponent,Fragment} from 'comp/index';\n\nclass NewCaseView extends DSComponent {\n    componentDidMount = () => {\n    }\n    render() {\n        return (\n            <Fragment>\n                new case\n            </Fragment>\n        );\n    }\n}\nexport default NewCaseView;","import React,{DSComponent,Fragment} from 'comp/index';\nimport './index.less'\n\nclass DefaultView extends DSComponent{   \n    componentDidMount=()=>{\n    }\n    render(){\n        return (\n        <Fragment>home\n        </Fragment>\n        );\n    }\n}\nexport default DefaultView;","import React,{DSComponent,Fragment,post} from 'comp/index';\nimport './index.less'\n\nimport { message,Tree} from 'antd';\n\nclass ModuleTreeView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.state = {dataSource:[],selectedKeys:[]};\n    }\n    static defaultProps = {\n        onSelect:()=>{}\n    }\n    componentDidMount=async ()=>{\n        await this.onLoad();\n    }\n    unSelect=()=>{\n        this.setState(state=>{\n            state.selectedKeys = [];\n            return state;\n        });\n    }\n    onSelect=(keys,node)=>{\n        // {selected: bool, selectedNodes, node, event}\n        this.setState(state=>{\n            state.selectedKeys = keys;\n            return state;\n        },()=>{\n            this.props.onSelect(keys);\n        });\n        \n    }\n    onLoad=async()=>{\n        const dataSource = await this.loadData();\n        if(dataSource){\n            this.setState(state=>{\n                state.dataSource = dataSource;\n                return state;\n            });\n        }\n    }\n    expendNode= async (module)=>{\n        if(module){\n            const children = await this.loadData(module.key);\n            const {dataSource} = this.state;\n            if(dataSource){\n                const moduleSource = this.renderSource(dataSource,module.key,children);\n                this.setState(state=>{\n                    state.dataSource = moduleSource;\n                    return state;\n                });\n            }\n        }\n    }\n    renderSource=(list,key,children)=>{\n        return list.map(node=>{\n            if(node.key===key){\n                node['children'] = children;\n                return node;\n            }\n            if(node.children){\n                const _children = this.renderSource(node.children,key,children);\n                node['children'] = _children;\n                return node;\n            }\n            return node;\n        })\n    }\n    loadData=async(moduleId)=>{\n        const params = new FormData();\n        if(moduleId!==undefined){\n            params.append('moduleId', moduleId);\n        }\n        const response = await post('/api/module/list',params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            if(response.results){\n                return response.results.map(e=>{\n                    return {title:e.name,key:e.id,isLeaf:e.isLeaf};\n                });\n            }\n        }\n        return null;\n    }\n    render(){\n        const {dataSource,selectedKeys} = this.state;\n        return (\n        <Fragment>\n            <Tree treeData={dataSource} loadData={this.expendNode} onSelect={this.onSelect} selectedKeys={selectedKeys}/>\n        </Fragment>\n        );\n    }\n}\nexport default ModuleTreeView;","import React,{DSComponent,Fragment,post,DSTreeSelect} from 'comp/index';\nimport './index.less'\n\nimport { Form,Input,Modal,message} from 'antd';\n\nclass ModuleFormView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.formRef = React.createRef();\n        this.state = {dialog:false,moduleSource:[]};\n    }\n    static defaultProps = {\n        formData:{id:\"\",name:\"\",code:\"\",path:\"\",module:{id:\"\",name:\"\"}},\n        formType:{add:{name:\"新增模块\",code:\"1\"},update:{name:\"修改模块\",code:\"2\"}},\n        reloadTable:()=>{}\n    }\n    onEditor=(item)=>{\n        const type = item===undefined?\"1\":\"2\";\n        this.setState(state=>{\n            state.dialog = true;\n            state.formStatus = type;\n            if(type===this.props.formType.add.code){\n                state.dialogTitle = this.props.formType.add.name;\n            }\n            if(type===this.props.formType.update.code){\n                state.dialogTitle = this.props.formType.update.name;\n            }\n            return state;\n        },()=>{\n            if(type===this.props.formType.add.code){\n                const {formData} = this.props;\n                this.formRef.current.setFieldsValue(formData);\n            }\n            if(type===this.props.formType.update.code){\n                const module = {id:item.moduleId,name:item.moduleName};\n                const _params = Object.assign({},item,{module:module});\n                this.formRef.current.setFieldsValue(_params);\n            }\n        });\n    }\n    onCannel=()=>{\n        this.setState(state=>{\n            state.dialog = false;\n            state.formData = null;\n            return state;\n        });\n    }\n    onSaveOrUpdate=async(e)=>{\n        const {id,name,code,path,module} = e;\n        const {formStatus} = this.state;\n        let _path = \"/api/module/save\";\n        let content = {};\n        if(formStatus===this.props.formType.add.code){\n            content = {name:name,code:code,path:path,moduleId:module.id};\n        }\n        if(formStatus===this.props.formType.update.code){\n            _path = \"/api/module/modify\";\n            content = {id:id,name:name,code:code,path:path,moduleId:module.id};\n        }\n        const params = new FormData();\n        params.append(\"content\", JSON.stringify(content));\n        const response = await post(_path,params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            message.success(response.message);\n        }\n        this.setState(state=>{\n            state.dialog = false;\n            state.formData = null;\n            return state;\n        },()=>{\n            this.props.reloadTable();\n        });\n    }\n    render(){\n        const {dialog,formData,dialogTitle} = this.state;\n        return (\n        <Fragment>\n            <Modal\n                title={dialogTitle}\n                visible={dialog}\n                okButtonProps={{htmlType: 'submit', form: '_form'}}\n                onCancel={this.onCannel}\n                okText=\"确认\"\n                cancelText=\"取消\">\n                <Form id=\"_form\" layout=\"vertical\" ref={this.formRef} initialValues={formData} onFinish={this.onSaveOrUpdate}>\n                    <Form.Item name=\"id\" label=\"编号\" noStyle hidden={true}>\n                        <Input placeholder=\"\" autoComplete=\"off\"/>\n                    </Form.Item>\n                    <Form.Item name=\"moduleId\" label=\"模块编号\" noStyle hidden={true}>\n                        <Input placeholder=\"\" autoComplete=\"off\"/>\n                    </Form.Item>\n                    <Form.Item name=\"name\" label=\"名称\" rules={[{ required: true, message: '名称不能为空' }]}>\n                        <Input placeholder=\"\" autoComplete=\"off\"/>\n                    </Form.Item>\n                    <Form.Item name=\"code\" label=\"编码\" rules={[{ required: true, message: '编码不能为空' }]}>\n                        <Input placeholder=\"\" autoComplete=\"off\"/>\n                    </Form.Item>\n                    <Form.Item name=\"path\" label=\"路径\" rules={[{ required: true, message: '路径不能为空' }]}>\n                        <Input placeholder=\"\" autoComplete=\"off\"/>\n                    </Form.Item>\n                    <Form.Item name=\"module\" label=\"模块\" rules={[{ required: true, message: '模块不能为空' }]}>\n                        <DSTreeSelect path='/api/module/list' code={{title:'name',value:'id',isLeaf:'isLeaf',pId:\"moduleId\"}}></DSTreeSelect>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </Fragment>\n        );\n    }\n}\nexport default ModuleFormView;","import React,{DSTable,DSComponent,Fragment,post} from 'comp/index';\nimport './index.less'\n\nimport { Form,Input, Button,Row,Col,Breadcrumb,message,Space} from 'antd';\nimport {PlusOutlined } from '@ant-design/icons';\n\nimport ModuleTreeView  from 'views/manager/module/module';\nimport ModuleFormView from 'views/manager/module/form';\nclass ModuleView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.formRef = React.createRef();\n        this.tableRef = React.createRef();\n        this.searchFormRef = React.createRef();\n        this.moduleTreeRef = React.createRef();\n        this.state = {searchCondition:props.searchCondition};\n    }\n    static defaultProps = {\n        searchCondition:{}\n    }\n    onSearch=async(e)=>{\n        this.setState(state=>{\n            state.searchCondition = e;\n            return state;\n        },()=>{\n            this.tableRef.current.reload();//刷新表单\n        });\n    }\n    onReset=()=>{\n        const {searchCondition} = this.props;\n        this.setState(state=>{\n            state.searchCondition = searchCondition;\n            return state;\n        },()=>{\n            this.searchFormRef.current.resetFields();//重置搜索\n            this.tableRef.current.reload();//刷新表单\n            this.moduleTreeRef.current.unSelect();\n        });\n    }\n    onDelete=async(e)=>{\n        const params = new FormData();\n        params.append(\"id\", e.id);\n        const response = await post(\"/api/module/delete\",params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            message.success(response.message);\n            this.onReload();\n        }\n    }\n    onEditor=(item)=>{\n        this.formRef.current.onEditor(item);\n    }\n    onReload=()=>{\n        this.tableRef.current.reload();\n    }\n    onSelectNode=(node)=>{\n        this.setState(state=>{\n            state.searchCondition = Object.assign({},state.searchCondition,{moduleId:node[0]});\n            return state;\n        },()=>{\n            this.onReload();\n        });\n    }\n\n    render(){\n        const {searchCondition} = this.state;\n        const columns=[\n        {title: '名称',dataIndex: 'name'},\n        {title: '编码',dataIndex: 'code'},\n        {title: '路径',dataIndex: 'path'},\n        {title: '上级模块',dataIndex: 'moduleName'},\n        {title: '操作',width:160,render:(value,item,index)=>{\n            return (\n            <Space>\n                <Button type=\"link\" onClick={this.onEditor.bind(this,item)}>编辑</Button>\n                <Button type=\"link\" onClick={this.onDelete.bind(this,item)}>删除</Button>\n            </Space>\n            );\n        }}];\n\n        return (\n        <Fragment>\n            <ModuleFormView  ref={this.formRef} reloadTable={this.onReload}></ModuleFormView>\n            <div className='ds-back-layout'>\n                <Breadcrumb className='ds-crumb'>\n                    <Breadcrumb.Item>首页</Breadcrumb.Item>\n                    <Breadcrumb.Item>资源管理</Breadcrumb.Item>\n                </Breadcrumb>\n                <div className='ds-search'>\n                    <div className='ds-search-title'>\n                        <Row wrap={false}>\n                            <Col flex=\"auto\">数据筛选</Col>\n                            {/* <Col flex=\"100px\" style={{textAlign:'right'}}>高级搜索</Col> */}\n                        </Row>\n                    </div>\n                    <div className='ds-search-wrap'>\n                        <Form layout=\"inline\" ref={this.searchFormRef} initialValues={searchCondition} onFinish={this.onSearch}>\n                            <Form.Item name=\"name\" label=\"名称\">\n                                <Input placeholder=\"\" autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\">搜索</Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button onClick = {this.onReset}>重置</Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n\n                <div className='ds-table'>\n                    <div className='ds-table-title'>\n                    <Row wrap={false}>\n                        <Col flex=\"auto\">数据列表</Col>\n                        <Col flex=\"100px\" style={{textAlign:'right'}}>\n                            <Button type=\"primary\" icon={<PlusOutlined/>}  onClick={this.onEditor.bind(this,undefined)}>新增</Button>\n                        </Col>\n                    </Row>\n                    </div>\n                    <div className='ds-table-wrap' style={{borderTop:\"1px solid #f0f0f0\"}}>\n                    <Row>\n                        <Col flex=\"250px\">\n                            <div style={{marginTop:12}}>\n                            <ModuleTreeView onSelect={this.onSelectNode} ref={this.moduleTreeRef}></ModuleTreeView>\n                            </div>\n                        </Col>\n                        <Col flex=\"auto\">\n                            <DSTable columns={columns} searchCondition={searchCondition} path={'/api/module/find'} ref={this.tableRef}></DSTable>\n                        </Col>\n                    </Row>\n                    \n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n        );\n    }\n}\nexport default ModuleView;","import React,{DSComponent,Fragment,post} from 'comp/index';\nimport './index.less'\n\nimport { message,Tree} from 'antd';\n\nclass ModuleTreeView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.state = {dataSource:[],selectedKeys:[]};\n    }\n    static defaultProps = {\n        onSelect:()=>{}\n    }\n    componentDidMount=async ()=>{\n        await this.onLoad();\n    }\n    unSelect=()=>{\n        this.setState(state=>{\n            state.selectedKeys = [];\n            return state;\n        });\n    }\n    onSelect=(keys,node)=>{\n        this.setState(state=>{\n            state.selectedKeys = keys;\n            return state;\n        },()=>{\n            this.props.onSelect(keys);\n        });\n        \n    }\n    onLoad=async()=>{\n        const dataSource = await this.loadData();\n        if(dataSource){\n            this.setState(state=>{\n                state.dataSource = dataSource;\n                return state;\n            });\n        }\n    }\n    expendNode= async (module)=>{\n        if(module){\n            const children = await this.loadData(module.key);\n            const {dataSource} = this.state;\n            if(dataSource){\n                const moduleSource = this.renderSource(dataSource,module.key,children);\n                this.setState(state=>{\n                    state.dataSource = moduleSource;\n                    return state;\n                });\n            }\n        }\n    }\n    renderSource=(list,key,children)=>{\n        return list.map(node=>{\n            if(node.key===key){\n                node['children'] = children;\n                return node;\n            }\n            if(node.children){\n                const _children = this.renderSource(node.children,key,children);\n                node['children'] = _children;\n                return node;\n            }\n            return node;\n        })\n    }\n    loadData=async(moduleId)=>{\n        const params = new FormData();\n        if(moduleId!==undefined){\n            params.append('moduleId', moduleId);\n        }\n        const response = await post('/api/module/list',params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            if(response.results){\n                return response.results.map(e=>{\n                    return {title:e.name,key:e.id,isLeaf:e.isLeaf};\n                });\n            }\n        }\n        return null;\n    }\n    render(){\n        const {dataSource,selectedKeys} = this.state;\n        return (\n        <Fragment>\n            <Tree treeData={dataSource} loadData={this.expendNode} onSelect={this.onSelect} selectedKeys={selectedKeys}/>\n        </Fragment>\n        );\n    }\n}\nexport default ModuleTreeView;","import React,{DSComponent,Fragment,post,DSSelectList} from 'comp/index';\nimport './index.less'\n\nimport { Row,Col,Modal,message} from 'antd';\nimport ModuleTreeView from 'views/manager/roleResource/module';\n\nclass RoleResourceFormView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.ListRef = React.createRef();\n        this.moduleTreeRef = React.createRef();\n        \n        this.state = {dialog:false,condition:{}};\n    }\n    static defaultProps = {\n        reloadTable:()=>{}\n    }\n    onEditor=(item)=>{\n        this.setState(state=>{\n            state.dialog = true;\n            state.dialogTitle = \"角色授权\";\n            state.condition = {roleId:item.id};\n            return state;\n        },()=>{\n           this.onReload();\n        });\n    }\n    onCannel=()=>{\n        this.setState(state=>{\n            state.dialog = false;\n            return state;\n        });\n    }\n    onReload=()=>{\n        this.ListRef.current.reload();\n    }\n    onSelectNode=(node)=>{\n        this.setState(state=>{\n            state.condition = Object.assign({},state.condition,{moduleId:node[0]});\n            return state;\n        },()=>{\n            this.onReload();\n        });\n    }\n    onChange= async(keyList,items)=>{\n        const {condition} = this.state;\n        const params = new FormData();\n        params.append(\"roleId\", condition.roleId);\n        params.append(\"resourceIds\", keyList);\n        const response = await post(\"/api/authorization/role/permission/batch/save\",params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            message.success(response.message);\n        }\n    }\n    render(){\n        const {dialog,dialogTitle,condition,} = this.state;\n        const columns=[\n            {title: '名称',dataIndex: 'resourceName'},\n            {title: '编码',dataIndex: 'resourceCode'},\n            {title: '路径',dataIndex: 'resourcePath'}];\n        return (\n        <Fragment>\n            <Modal\n                title={dialogTitle}\n                visible={dialog}\n                width={1200}\n                bodyStyle={{height: 1000,overflowY:\"auto\"}}\n                okButtonProps={{htmlType: 'submit', form: '_form'}}\n                onCancel={this.onCannel}\n                footer={null}>\n                <Row>\n                    <Col flex=\"250px\">\n                        <div style={{marginTop:12}}>\n                            <ModuleTreeView onSelect={this.onSelectNode} ref={this.moduleTreeRef}></ModuleTreeView>\n                        </div>\n                    </Col>\n                    <Col flex=\"auto\">\n                        <DSSelectList columns={columns} onChange={this.onChange} id=\"resourceId\" condition={condition} path={'/api/authorization/role/permission/list'} ref={this.ListRef} other={{pagination:false}} ></DSSelectList>\n                    </Col>\n                </Row>\n            </Modal>\n        </Fragment>\n        );\n    }\n}\nexport default RoleResourceFormView;\n\n\n\n","import React,{DSComponent,Fragment,post} from 'comp/index';\nimport './index.less'\n\nimport { message,Tree,Empty} from 'antd';\n\nclass MenuTreeView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.state = {dataSource:[],selectedKeys:[]};\n    }\n    static defaultProps = {\n        roleCode:'',\n        onSelect:()=>{}\n    }\n    componentDidMount=async ()=>{\n        await this.reload();\n    }\n    unSelect=()=>{\n        this.setState(state=>{\n            state.selectedKeys = [];\n            return state;\n        });\n    }\n    onSelect=(keys,node)=>{\n        this.setState(state=>{\n            state.selectedKeys = keys;\n            return state;\n        },()=>{\n            this.props.onSelect(node);\n        });\n    }\n    reload=async()=>{\n        const dataSource = await this.loadData();\n        if(dataSource){\n            this.setState(state=>{\n                state.dataSource = dataSource;\n                state.expandedKeys = [];\n                state.selectedKeys = [];\n                state.loadedKeys=[];\n                return state;\n            });\n        }else{\n            this.setState(state=>{\n                state.dataSource = [];\n                state.expandedKeys = [];\n                state.selectedKeys = [];\n                state.loadedKeys=[];\n                return state;\n            });\n        }\n    }\n    expendNode= async(module)=>{\n        if(module){\n            const children = await this.loadData(module.key);\n            const {dataSource} = this.state;\n            if(dataSource){\n                const moduleSource = this.renderSource(dataSource,module.key,children);\n                this.setState(state=>{\n                    state.dataSource = moduleSource;\n                    return state;\n                });\n            }\n        }\n    }\n    renderSource=(list,key,children)=>{\n        return list.map(node=>{\n            if(node.key===key){\n                node['children'] = children;\n                return node;\n            }\n            if(node.children){\n                const _children = this.renderSource(node.children,key,children);\n                node['children'] = _children;\n                return node;\n            }\n            return node;\n        })\n    }\n    loadData=async(menuId)=>{\n        const {roleCode} = this.props;\n        const params = new FormData();\n        params.append('roleCode', roleCode);\n        if(menuId!==undefined){\n            params.append('menuId', menuId);\n        }\n        const response = await post('/api/menu/list',params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            if(response.results){\n                return response.results.map(e=>{\n                    return {title:e.name,key:e.id,isLeaf:e.isLeaf};\n                });\n            }\n        }\n        return null;\n    }\n    onExpand=(expandedKeys)=>{\n        this.setState(state=>{\n            state.expandedKeys = expandedKeys;\n            return state;\n        });\n    }\n    onLoad=(loadedKeys)=>{\n        this.setState(state=>{\n            state.loadedKeys = loadedKeys;\n            return state;\n        });\n    }\n    render(){\n        const {dataSource,selectedKeys,expandedKeys,loadedKeys} = this.state;\n        return (\n        <Fragment>\n            {dataSource.length<=0&&\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n            }\n            {dataSource.length>0&&\n            <Tree \n            selectable={true} \n            onSelect={this.onSelect} \n            selectedKeys={selectedKeys} \n            onExpand={this.onExpand} \n            expandedKeys={expandedKeys}\n            loadedKeys={loadedKeys}\n            onLoad={this.onLoad}\n            treeData={dataSource} \n            loadData={this.expendNode} \n            />\n            }\n        </Fragment>\n        );\n    }\n}\nexport default MenuTreeView;","import React,{DSComponent,Fragment,post,DSTreeSelect,DSList} from 'comp/index';\nimport './index.less'\n\nimport { Row,Col,Modal,message, Button,Form,Input,Select,Radio,Popconfirm} from 'antd';\nimport MenuTreeView from 'views/manager/roleResource/menu';\n\nclass RoleMenuFormView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.menuTreeRef = React.createRef();\n        this.formRef = React.createRef();\n        //nodeItem:{id:\"\",name:\"\"}\n        this.state = {dialog:false,condition:{},nodeSelect:false,formData:props.formData,formType:1};\n    }\n    static defaultProps = {\n        formData:{id:\"\",name:\"\",code:\"\",path:\"\",sourceType:\"\",serialNumber:\"\",pname:\"\",module:{id:\"\",name:\"\"}},\n        reloadTable:()=>{}\n    }\n    onEditor=(item)=>{\n        this.setState(state=>{\n            state.dialog = true;\n            state.dialogTitle = \"菜单管理\";\n            state.roleCode = item.code;\n            return state;\n        },()=>{\n           this.onReload();\n        });\n    }\n    onCannel=()=>{\n        this.setState(state=>{\n            state.dialog = false;\n            return state;\n        },()=>{\n            this.onReload();\n        });\n    }\n    onReload=()=>{\n        this.menuTreeRef.current.reload();\n    }\n    onSelectNode=(item)=>{\n        const {selected,node} = item;\n        const {formData} = this.props;\n        this.setState(state=>{\n            state.nodeSelect = selected;\n            const {title,key} = node;\n            const nodeItem = {id:key,name:title};\n            state.nodeItem = nodeItem;\n            state.formType = 1;\n            if(selected===false){\n                state.nodeItem = {};\n            }\n            return state;\n        },()=>{\n            const {nodeSelect,nodeItem} = this.state;\n            if(nodeSelect===true){\n                const {name} = nodeItem;\n                const _formData = Object.assign({},formData,{pname:name});\n                this.formRef.current.setFieldsValue(_formData);\n            }else{\n                this.formRef.current.setFieldsValue(formData);\n            }\n        });\n    }\n    onValuesChange=(field,a)=>{\n        const fieldName = Object.keys(field)[0];\n        if(fieldName===\"sourceType\"){\n            const fieldValue = field[fieldName];\n            this.setState(state=>{\n                if(fieldValue==='module'){\n                    state.sourceType = \"module\";\n                }\n                if(fieldValue==='custom'){\n                    state.sourceType = \"custom\";\n                }\n                return state;\n            })\n        }\n    }\n    onSaveOrUpdate=async(e)=>{\n        const {id,name,code,path,sourceType,serialNumber,module} = e;\n        const {roleCode,formType,nodeSelect,nodeItem} = this.state;\n        let _path;\n        let content = {name:name,code:code,sourceType:sourceType,serialNumber:serialNumber};\n        if(nodeSelect){\n            content = Object.assign(content,{pid:nodeItem.id});\n        }\n        if(formType===2){\n            _path = \"/api/menu/modify\"\n            content = Object.assign(content,{id:id});\n        }else{\n            _path = \"/api/menu/save\"\n        }\n        if(sourceType===\"module\"){\n            content = Object.assign(content,{moduleId:module.id});\n        }\n        if(sourceType===\"custom\"){\n            content = Object.assign(content,{path:path});\n        }\n        const params = new FormData();\n        params.append('roleCode', roleCode);\n        params.append('content', JSON.stringify(content));\n        const response = await post(_path,params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            //重置表单\n            this.setState(state=>{\n                state.nodeSelect = false;\n                state.nodeItem = {};\n                state.formType = 1;\n                state.sourceType = \"\";\n                return state;\n            },()=>{\n                const {formData} = this.props;\n                this.formRef.current.setFieldsValue(formData);\n                this.menuTreeRef.current.unSelect();\n                this.onReload();//刷新菜单\n                message.success(response.message);\n            });\n        }\n    }\n    onFormTypeChange=async(e)=>{\n        const value = e.target.value;\n        // debugger;\n        if(value===2){\n            const {nodeItem} = this.state;\n            const {id} = nodeItem;\n            const params = new FormData();\n            params.append('id', id);\n            const response = await post('/api/menu/find/one',params).catch(error => {\n                message.error(error.message);\n            });\n            if(response){\n                const {results} = response;\n                const {id,name,code,sourceType,serialNumber,path,moduleId,moduleName} = results;\n                this.setState(state=>{\n                    state.formType = value;\n                    state.sourceType = sourceType;\n                    return state;\n                },()=>{\n                    const data = {id:id,name:name,code:code,path:path,sourceType:sourceType,serialNumber:serialNumber,module:{id:moduleId,name:moduleName}}\n                    this.formRef.current.setFieldsValue(data);\n                });\n            }\n        }\n        if(value===1){\n            this.setState(state=>{\n                state.formType = value;\n                state.sourceType = \"\";\n                return state;\n            },()=>{\n                const {formData} = this.props;\n                const {nodeSelect,nodeItem} = this.state;\n                if(nodeSelect===true){\n                    const {name} = nodeItem;\n                    const _formData = Object.assign({},formData,{pname:name});\n                    this.formRef.current.setFieldsValue(_formData);\n                }else{\n                    this.formRef.current.setFieldsValue(formData);\n                }\n            });\n        }\n        if(value===3){\n            e.preventDefault();\n            return;\n        }\n        if(value===4){\n            this.setState(state=>{\n                state.formType = value;\n                return state;\n            },()=>{\n                \n            });\n        }\n    }\n    onDeleteNode=async()=>{\n        const {nodeItem} = this.state;\n        const {id} = nodeItem;\n        const params = new FormData();\n        params.append('id', id);\n        const response = await post('/api/menu/delete',params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            //重置表单\n            this.setState(state=>{\n                state.nodeSelect = false;\n                state.nodeItem = {};\n                state.formType = 1;\n                state.sourceType = \"\";\n                return state;\n            },()=>{\n                const {formData} = this.props;\n                this.formRef.current.setFieldsValue(formData);\n                this.onReload();//刷新菜单\n                message.success(response.message);\n            });\n        }\n    }\n    onMenuCopy=async(item)=>{\n        const {code} = item;\n        const {roleCode} = this.state;\n        const params = new FormData();\n        params.append('sourceRoleCode', code);\n        params.append('targetRoleCode', roleCode);\n        const response = await post('/api/menu/copy',params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            //重置表单\n            this.setState(state=>{\n                state.nodeSelect = false;\n                state.nodeItem = {};\n                state.formType = 1;\n                state.sourceType = \"\";\n                return state;\n            },()=>{\n                const {formData} = this.props;\n                this.formRef.current.setFieldsValue(formData);\n                this.onReload();//刷新菜单\n                message.success(response.message);\n            });\n        }\n    }\n    render(){\n        const {dialog,dialogTitle,roleCode,sourceType,nodeSelect,formData,formType} = this.state;\n        return (\n        <Fragment>\n            <Modal\n                title={dialogTitle}\n                visible={dialog}\n                width={1200}\n                bodyStyle={{overflowY:\"auto\",padding:0}}\n                onCancel={this.onCannel}\n                footer={null}>\n                    <div className='menu-modal'>\n                    <Row>\n                    <Col flex=\"250px\">\n                        <MenuTreeView roleCode={roleCode} onSelect={this.onSelectNode} ref={this.menuTreeRef}></MenuTreeView>\n                    </Col>\n                    <Col flex=\"auto\">\n                        <Radio.Group value={formType} onChange={this.onFormTypeChange}>\n                            <Radio value={1}>新增</Radio>\n                            <Radio value={2} disabled={!nodeSelect}>编辑</Radio>\n                            <Popconfirm\n                                placement=\"bottom\" \n                                title={`确认删除【${this.state.nodeItem?this.state.nodeItem.name:\"\"}】`}\n                                onConfirm={this.onDeleteNode}\n                                okText={\"确认\"}\n                                cancelText={\"取消\"}>\n                            <Radio value={3} disabled={!nodeSelect}>删除</Radio>\n                            </Popconfirm>\n                            <Radio value={4}>拷贝覆盖</Radio>\n                        </Radio.Group>\n                        {formType===4&&\n                        <DSList title={\"name\"} path=\"/api/role/list\" onChange={this.onMenuCopy}/>\n                        }\n                        {formType!==4&&\n                        <Form layout=\"vertical\" onValuesChange={this.onValuesChange} ref={this.formRef} initialValues={formData} onFinish={this.onSaveOrUpdate}>\n                            <Form.Item name=\"id\" label=\"编号\" noStyle hidden={true}>\n                                <Input placeholder=\"\"  autoComplete=\"off\"/>\n                            </Form.Item>\n                            {nodeSelect&&formType===1&&\n                            <Form.Item name=\"pname\" label=\"上级\" rules={[{ required: true, message: '名称不能为空' }]}>\n                                <Input placeholder=\"\"  autoComplete=\"off\" disabled={true}/>\n                            </Form.Item>\n                            }\n                            <Form.Item name=\"name\" label=\"名称\" rules={[{ required: true, message: '名称不能为空' }]}>\n                                <Input placeholder=\"\"  autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item name=\"code\" label=\"编码\" rules={[{ required: true, message: '编码不能为空' }]}>\n                                <Input placeholder=\"\"  autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item name=\"sourceType\" label=\"类型\" rules={[{ required: true, message: '类型不能为空' }]}>\n                                <Select>\n                                    <Select.Option value=\"module\">模块</Select.Option>\n                                    <Select.Option value=\"custom\">自定义</Select.Option>\n                                </Select>\n                            </Form.Item>\n                            {sourceType&&sourceType===\"custom\"&&\n                            <Form.Item name=\"path\" label=\"路径\">\n                                <Input placeholder=\"\"  autoComplete=\"off\"/>\n                            </Form.Item>\n                            }\n                            {sourceType&&sourceType===\"module\"&&\n                            <Form.Item name=\"module\" label=\"模块\" rules={[{ required: true, message: '排序不能为空' }]}>\n                                <DSTreeSelect path='/api/module/list' code={{title:'name',value:'id',isLeaf:'isLeaf',pId:\"moduleId\"}}></DSTreeSelect>\n                            </Form.Item>\n                            }\n                            <Form.Item name=\"serialNumber\" label=\"排序\" rules={[{ required: true, message: '排序不能为空' }]}>\n                                <Input placeholder=\"\"  autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" size=\"large\">{formType===1&&\"新增\"}{formType===2&&\"更新\"}</Button>\n                            </Form.Item>\n                        </Form>\n                        }\n                    </Col>\n                </Row>\n                    </div>\n                \n            </Modal>\n        </Fragment>\n        );\n    }\n}\nexport default RoleMenuFormView;\n\n\n\n","import React,{DSTable,DSComponent,Fragment,post} from 'comp/index';\nimport './index.less'\n\nimport { Form,Input, Button,Row,Col,Breadcrumb,message,Space} from 'antd';\nimport RoleResourceFormView from 'views/manager/roleResource/form';\nimport RoleMenuFormView from 'views/manager/roleResource/formToMenu';\n\nclass RoleResourceView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.formRef = React.createRef();\n        this.formMenuRef = React.createRef();\n        this.tableRef = React.createRef();\n        this.searchFormRef = React.createRef();\n        this.state = {searchCondition:props.searchCondition};\n    }\n    static defaultProps = {\n        searchCondition:{}\n    }\n    onSearch=async(e)=>{\n        this.setState(state=>{\n            state.searchCondition = e;\n            return state;\n        },()=>{\n            this.tableRef.current.reload();//刷新表单\n        });\n    }\n    onReset=()=>{\n        const {searchCondition} = this.props;\n        this.setState(state=>{\n            state.searchCondition = searchCondition;\n            return state;\n        },()=>{\n            this.searchFormRef.current.resetFields();//重置搜索\n            this.tableRef.current.reload();//刷新表单\n        });\n    }\n    onDelete=async(e)=>{\n        const params = new FormData();\n        params.append(\"id\", e.id);\n        const response = await post(\"/api/role/delete\",params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            message.success(response.message);\n            this.onReload();\n        }\n    }\n    onEditor=(item,type)=>{\n        if(type==='auth'){\n            this.formRef.current.onEditor(item);\n        }\n        if(type==='menu'){\n            this.formMenuRef.current.onEditor(item);\n        }\n    }\n    onReload=()=>{\n        this.tableRef.current.reload();\n    }\n    render(){\n        const {searchCondition} = this.state;\n        const columns=[\n        {title: '名称',dataIndex: 'name'},\n        {title: '编码',dataIndex: 'code'},\n        {title: '等级',dataIndex: 'level',render:(value,item,index)=>{\n            if(value===\"31\")return \"普通角色\";\n            if(value===\"21\")return \"商戶角色\";\n            if(value===\"11\")return \"系統角色\";\n            return value;\n        }},\n        {title: '操作',width:160,render:(value,item,index)=>{\n            return (\n            <Space>\n                <Button type=\"link\" onClick={this.onEditor.bind(this,item,'auth')}>授权</Button>\n                <Button type=\"link\" onClick={this.onEditor.bind(this,item,'menu')}>菜单</Button>\n            </Space>\n            );\n        }}];\n        return (\n        <Fragment>\n            <RoleResourceFormView ref={this.formRef} reloadTable={this.onReload}></RoleResourceFormView>\n            <RoleMenuFormView ref={this.formMenuRef} reloadTable={this.onReload}></RoleMenuFormView>\n            \n            <div className='ds-back-layout'>\n                <Breadcrumb className='ds-crumb'>\n                    <Breadcrumb.Item>首页</Breadcrumb.Item>\n                    <Breadcrumb.Item>角色授权</Breadcrumb.Item>\n                </Breadcrumb>\n                <div className='ds-search'>\n                    <div className='ds-search-title'>\n                        <Row wrap={false}>\n                            <Col flex=\"auto\">数据筛选</Col>\n                            {/* <Col flex=\"100px\" style={{textAlign:'right'}}>高级搜索</Col> */}\n                        </Row>\n                    </div>\n                    <div className='ds-search-wrap'>\n                        <Form layout=\"inline\" ref={this.searchFormRef} initialValues={searchCondition} onFinish={this.onSearch}>\n                            <Form.Item name=\"name\" label=\"名称\">\n                                <Input placeholder=\"\" autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\">搜索</Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button onClick = {this.onReset}>重置</Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n\n                <div className='ds-table'>\n                    <div className='ds-table-title'>\n                    <Row wrap={false}>\n                        <Col flex=\"auto\">数据列表</Col>\n                        <Col flex=\"100px\" style={{textAlign:'right'}}>\n                            {/* <Button type=\"primary\" icon={<PlusOutlined/>} onClick={this.onEditor}>新增</Button> */}\n                        </Col>\n                    </Row>\n                    </div>\n                    <div className='ds-table-wrap'>\n                        <DSTable columns={columns} searchCondition={searchCondition} path={'/api/role/find'} ref={this.tableRef}></DSTable>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n        );\n    }\n}\nexport default RoleResourceView;","import React,{DSComponent,Fragment,post} from 'comp/index';\nimport './index.less'\n\nimport { Modal,List,Checkbox,message} from 'antd';\n\nclass UserRoleFormView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.state = {dialog:false,dataSource:[]};\n    }\n    static defaultProps = {\n        reloadTable:()=>{}\n    }\n    \n    onEditor=(item)=>{\n        debugger;\n        this.setState(state=>{\n            state.dialog = true;\n            state.dialogTitle = \"用户授权\";\n            state.userId = item.id;\n            return state;\n        },()=>{\n            this.onLoad();\n        });\n    }\n    onCannel=()=>{\n        this.setState(state=>{\n            state.dialog = false;\n            state.formData = null;\n            return state;\n        });\n    }\n    onSaveOrUpdate=async(e)=>{\n        \n    }\n    onLoad= async()=>{\n        const {userId} = this.state;\n        const params = new FormData();\n        params.append('userId', userId);\n        const response = await post('/api/authorization/user/permission/list', params).catch(error => {\n            message.error(error.message);\n        });\n        if (response) {\n            const { results} = response;\n            const dataSource = results.map(e=>{\n                return {roleName:e.roleName,selected:e.selected,id:e.id,roleId:e.roleId};\n            });\n            this.setState(state=>{\n                state.dataSource = dataSource;\n                return state;\n            });\n        }\n    }\n    onChange=async (item,e)=>{\n        const {userId} = this.state;\n        const {roleId} = item;\n        let path;\n        if(e.target.checked){\n            path = '/api/authorization/user/permission/save';\n        }else{\n            path = '/api/authorization/user/permission/delete';\n        }\n        const params = new FormData();\n        params.append('userId', userId);\n        params.append('roleId',roleId);\n        const response = await post(path, params).catch(error => {\n            message.error(error.message);\n        });\n        if (response) {\n            message.success(response.message);\n            this.onLoad();\n        }\n    }\n    render(){\n        const {dialog,dialogTitle,dataSource} = this.state;\n        return (\n        <Fragment>\n            <Modal\n                title={dialogTitle}\n                visible={dialog}\n                footer={null}\n                onCancel={this.onCannel}>\n                <List\n                    size=\"small\"\n                    // header={<div>Header</div>}\n                    // footer={<div>Footer</div>}\n                    // bordered\n                    dataSource={dataSource}\n                    renderItem={item => <List.Item>{<Checkbox checked={item.selected} onChange={this.onChange.bind(this,item)}>{item.roleName}</Checkbox>}</List.Item>}\n                    />\n            </Modal>\n        </Fragment>\n        );\n    }\n}\nexport default UserRoleFormView;","import React,{DSTable,DSComponent,Fragment,post} from 'comp/index';\nimport './index.less'\n\nimport { Form,Input, Button,Row,Col,Breadcrumb,message,Space} from 'antd';\n\nimport UserRoleFormView from 'views/manager/userRole/form';\nclass UserRoleView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.formRef = React.createRef();\n        this.tableRef = React.createRef();\n        this.searchFormRef = React.createRef();\n        this.state = {searchCondition:props.searchCondition};\n    }\n    static defaultProps = {\n        searchCondition:{}\n    }\n    onSearch=async(e)=>{\n        this.setState(state=>{\n            state.searchCondition = e;\n            return state;\n        },()=>{\n            this.tableRef.current.reload();//刷新表单\n        });\n    }\n    onReset=()=>{\n        const {searchCondition} = this.props;\n        this.setState(state=>{\n            state.searchCondition = searchCondition;\n            return state;\n        },()=>{\n            this.searchFormRef.current.resetFields();//重置搜索\n            this.tableRef.current.reload();//刷新表单\n        });\n    }\n    onDelete=async(e)=>{\n        const params = new FormData();\n        params.append(\"id\", e.id);\n        const response = await post(\"/api/role/delete\",params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            message.success(response.message);\n            this.onReload();\n        }\n    }\n    onEditor=(item)=>{\n        this.formRef.current.onEditor(item);\n    }\n    onReload=()=>{\n        this.tableRef.current.reload();\n    }\n    render(){\n        const {searchCondition} = this.state;\n        const columns=[\n            {title: '昵称',dataIndex: 'aliasName'},\n            {title: '账号',dataIndex: 'account'},\n            {title: '邮箱',dataIndex: 'email'},\n            {title: '手机',dataIndex: 'phone'},\n            {title: '状态',dataIndex: 'status'},\n            {title: '最后一次登录',dataIndex: 'lastLoginIp'},\n            {title: '操作',width:160,render:(value,item,index)=>{\n                return (\n                <Space>\n                    <Button type=\"link\" onClick={this.onEditor.bind(this,item)}>授权</Button>\n                </Space>\n                );\n            }}];\n        return (\n        <Fragment>\n            <UserRoleFormView ref={this.formRef} reloadTable={this.onReload}></UserRoleFormView>\n            <div className='ds-back-layout'>\n                <Breadcrumb className='ds-crumb'>\n                    <Breadcrumb.Item>首页</Breadcrumb.Item>\n                    <Breadcrumb.Item>用户授权</Breadcrumb.Item>\n                </Breadcrumb>\n                <div className='ds-search'>\n                    <div className='ds-search-title'>\n                        <Row wrap={false}>\n                            <Col flex=\"auto\">数据筛选</Col>\n                            {/* <Col flex=\"100px\" style={{textAlign:'right'}}>高级搜索</Col> */}\n                        </Row>\n                    </div>\n                    <div className='ds-search-wrap'>\n                        <Form layout=\"inline\" ref={this.searchFormRef} initialValues={searchCondition} onFinish={this.onSearch}>\n                            <Form.Item name=\"name\" label=\"名称\">\n                                <Input placeholder=\"\" autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\">搜索</Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button onClick = {this.onReset}>重置</Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n\n                <div className='ds-table'>\n                    <div className='ds-table-title'>\n                    <Row wrap={false}>\n                        <Col flex=\"auto\">数据列表</Col>\n                        <Col flex=\"100px\" style={{textAlign:'right'}}>\n                            {/* <Button type=\"primary\" icon={<PlusOutlined/>} onClick={this.onEditor}>新增</Button> */}\n                        </Col>\n                    </Row>\n                    </div>\n                    <div className='ds-table-wrap'>\n                        <DSTable columns={columns} searchCondition={searchCondition} path={'/api/user/find'} ref={this.tableRef}></DSTable>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n        );\n    }\n}\nexport default UserRoleView;","import React,{DSComponent,Fragment,post,DSTreeSelect} from 'comp/index';\nimport './index.less'\n\nimport { Form,Input,Modal,message} from 'antd';\n\nclass ResourceFormView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.formRef = React.createRef();\n        this.state = {dialog:false,moduleSource:[]};\n    }\n    static defaultProps = {\n        formData:{id:\"\",name:\"\",code:\"\",path:\"\",module:{id:\"\",name:\"\"}},\n        formType:{add:{name:\"新增资源\",code:\"1\"},update:{name:\"修改资源\",code:\"2\"}},\n        reloadTable:()=>{}\n    }\n    onEditor=(item)=>{\n        const type = item===undefined?\"1\":\"2\";\n        this.setState(state=>{\n            state.dialog = true;\n            state.formStatus = type;\n            if(type===this.props.formType.add.code){\n                state.dialogTitle = this.props.formType.add.name;\n            }\n            if(type===this.props.formType.update.code){\n                state.dialogTitle = this.props.formType.update.name;\n            }\n            return state;\n        },()=>{\n            if(type===this.props.formType.add.code){\n                const {formData} = this.props;\n                this.formRef.current.setFieldsValue(formData);\n            }\n            if(type===this.props.formType.update.code){\n                const module = {id:item.moduleId,name:item.moduleName};\n                const _params = Object.assign({},item,{module:module});\n                this.formRef.current.setFieldsValue(_params);\n            }\n        });\n    }\n    onCannel=()=>{\n        this.setState(state=>{\n            state.dialog = false;\n            state.formData = null;\n            return state;\n        });\n    }\n    onSaveOrUpdate=async(e)=>{\n        const {id,name,code,path,module} = e;\n        const {formStatus} = this.state;\n        let _path = \"/api/resource/save\";\n        let content = {};\n        if(formStatus===this.props.formType.add.code){\n            content = {name:name,code:code,path:path,moduleId:module.id};\n        }\n        if(formStatus===this.props.formType.update.code){\n            _path = \"/api/resource/modify\";\n            content = {id:id,name:name,code:code,path:path,moduleId:module.id};\n        }\n        const params = new FormData();\n        params.append(\"content\", JSON.stringify(content));\n        const response = await post(_path,params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            message.success(response.message);\n        }\n        this.setState(state=>{\n            state.dialog = false;\n            state.formData = null;\n            return state;\n        },()=>{\n            this.props.reloadTable();\n        });\n    }\n    render(){\n        const {dialog,formData,dialogTitle} = this.state;\n        return (\n        <Fragment>\n            <Modal\n                title={dialogTitle}\n                visible={dialog}\n                okButtonProps={{htmlType: 'submit', form: '_form'}}\n                onCancel={this.onCannel}\n                okText=\"确认\"\n                cancelText=\"取消\">\n                <Form id=\"_form\" layout=\"vertical\" ref={this.formRef} initialValues={formData} onFinish={this.onSaveOrUpdate}>\n                    <Form.Item name=\"id\" label=\"编号\" noStyle hidden={true}>\n                        <Input placeholder=\"\" autoComplete=\"off\"/>\n                    </Form.Item>\n                    <Form.Item name=\"moduleId\" label=\"模块编号\" noStyle hidden={true}>\n                        <Input placeholder=\"\" autoComplete=\"off\"/>\n                    </Form.Item>\n                    <Form.Item name=\"name\" label=\"名称\" rules={[{ required: true, message: '名称不能为空' }]}>\n                        <Input placeholder=\"\" autoComplete=\"off\"/>\n                    </Form.Item>\n                    <Form.Item name=\"code\" label=\"编码\" rules={[{ required: true, message: '编码不能为空' }]}>\n                        <Input placeholder=\"\" autoComplete=\"off\"/>\n                    </Form.Item>\n                    <Form.Item name=\"path\" label=\"路径\" rules={[{ required: true, message: '路径不能为空' }]}>\n                        <Input placeholder=\"\" autoComplete=\"off\"/>\n                    </Form.Item>\n                    <Form.Item name=\"module\" label=\"模块\" rules={[{ required: true, message: '模块不能为空' }]}>\n                        <DSTreeSelect path='/api/module/list' code={{title:'name',value:'id',isLeaf:'isLeaf',pId:\"moduleId\"}}></DSTreeSelect>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </Fragment>\n        );\n    }\n}\nexport default ResourceFormView;","import React,{DSComponent,Fragment,post} from 'comp/index';\nimport './index.less'\n\nimport { message,Tree} from 'antd';\n\nclass ModuleTreeView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.state = {dataSource:[],selectedKeys:[]};\n    }\n    static defaultProps = {\n        onSelect:()=>{}\n    }\n    componentDidMount=async ()=>{\n        await this.onLoad();\n    }\n    unSelect=()=>{\n        this.setState(state=>{\n            state.selectedKeys = [];\n            return state;\n        });\n    }\n    onSelect=(keys,node)=>{\n        // {selected: bool, selectedNodes, node, event}\n        this.setState(state=>{\n            state.selectedKeys = keys;\n            return state;\n        },()=>{\n            this.props.onSelect(keys);\n        });\n        \n    }\n    onLoad=async()=>{\n        const dataSource = await this.loadData();\n        if(dataSource){\n            this.setState(state=>{\n                state.dataSource = dataSource;\n                return state;\n            });\n        }\n    }\n    expendNode= async (module)=>{\n        if(module){\n            const children = await this.loadData(module.key);\n            const {dataSource} = this.state;\n            if(dataSource){\n                const moduleSource = this.renderSource(dataSource,module.key,children);\n                this.setState(state=>{\n                    state.dataSource = moduleSource;\n                    return state;\n                });\n            }\n        }\n    }\n    renderSource=(list,key,children)=>{\n        return list.map(node=>{\n            if(node.key===key){\n                node['children'] = children;\n                return node;\n            }\n            if(node.children){\n                const _children = this.renderSource(node.children,key,children);\n                node['children'] = _children;\n                return node;\n            }\n            return node;\n        })\n    }\n    loadData=async(moduleId)=>{\n        const params = new FormData();\n        if(moduleId!==undefined){\n            params.append('moduleId', moduleId);\n        }\n        const response = await post('/api/module/list',params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            if(response.results){\n                return response.results.map(e=>{\n                    return {title:e.name,key:e.id,isLeaf:e.isLeaf};\n                });\n            }\n        }\n        return null;\n    }\n    render(){\n        const {dataSource,selectedKeys} = this.state;\n        return (\n        <Fragment>\n            <Tree treeData={dataSource} loadData={this.expendNode} onSelect={this.onSelect} selectedKeys={selectedKeys}/>\n        </Fragment>\n        );\n    }\n}\nexport default ModuleTreeView;","import React,{DSTable,DSComponent,Fragment,post} from 'comp/index';\nimport './index.less'\n\nimport { Form,Input, Button,Row,Col,Breadcrumb,Space,message} from 'antd';\nimport {PlusOutlined } from '@ant-design/icons';\nimport ResourceFormView from 'views/manager/resource/form';\nimport ModuleTreeView  from 'views/manager/resource/module';\n\n\nclass ResourceView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.formRef = React.createRef();\n        this.tableRef = React.createRef();\n        this.searchFormRef = React.createRef();\n        this.moduleTreeRef = React.createRef();\n        this.state = {searchCondition:props.searchCondition};\n    }\n    static defaultProps = {\n        searchCondition:{}\n    }\n    onSearch=async(e)=>{\n        this.setState(state=>{\n            state.searchCondition = e;\n            return state;\n        },()=>{\n            this.tableRef.current.reload();//刷新表单\n        });\n    }\n    onReset=()=>{\n        const {searchCondition} = this.props;\n        this.setState(state=>{\n            state.searchCondition = searchCondition;\n            return state;\n        },()=>{\n            this.searchFormRef.current.resetFields();//重置搜索\n            this.tableRef.current.reload();//刷新表单\n            this.moduleTreeRef.current.unSelect();\n        });\n    }\n    onDelete=async(e)=>{\n        const params = new FormData();\n        params.append(\"id\", e.id);\n        const response = await post(\"/api/resource/delete\",params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            message.success(response.message);\n            this.onReload();\n        }\n    }\n    onEditor=(item)=>{\n        this.formRef.current.onEditor(item);\n    }\n    onReload=()=>{\n        this.tableRef.current.reload();\n    }\n    onSelectNode=(node)=>{\n        this.setState(state=>{\n            state.searchCondition = Object.assign({},state.searchCondition,{moduleId:node[0]});\n            return state;\n        },()=>{\n            this.onReload();\n        });\n    }\n\n    render(){\n        const {searchCondition} = this.state;\n        const columns=[\n        {title: '名称',dataIndex: 'name'},\n        {title: '编码',dataIndex: 'code'},\n        {title: '路径',dataIndex: 'path'},\n        {title: '模块',dataIndex: 'moduleName'},\n        {title: '操作',width:160,render:(value,item,index)=>{\n            return (\n            <Space>\n                <Button type=\"link\" onClick={this.onEditor.bind(this,item)}>编辑</Button>\n                <Button type=\"link\" onClick={this.onDelete.bind(this,item)}>删除</Button>\n            </Space>\n            );\n        }}];\n\n        return (\n        <Fragment>\n            <ResourceFormView  ref={this.formRef} reloadTable={this.onReload}></ResourceFormView>\n            <div className='ds-back-layout'>\n                <Breadcrumb className='ds-crumb'>\n                    <Breadcrumb.Item>首页</Breadcrumb.Item>\n                    <Breadcrumb.Item>资源管理</Breadcrumb.Item>\n                </Breadcrumb>\n                <div className='ds-search'>\n                    <div className='ds-search-title'>\n                        <Row wrap={false}>\n                            <Col flex=\"auto\">数据筛选</Col>\n                            {/* <Col flex=\"100px\" style={{textAlign:'right'}}>高级搜索</Col> */}\n                        </Row>\n                    </div>\n                    <div className='ds-search-wrap'>\n                        <Form layout=\"inline\" ref={this.searchFormRef} initialValues={searchCondition} onFinish={this.onSearch}>\n                            <Form.Item name=\"name\" label=\"名称\">\n                                <Input placeholder=\"\" autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\">搜索</Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button onClick = {this.onReset}>重置</Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n\n                <div className='ds-table'>\n                    <div className='ds-table-title'>\n                    <Row wrap={false}>\n                        <Col flex=\"auto\">数据列表</Col>\n                        <Col flex=\"100px\" style={{textAlign:'right'}}>\n                            <Button type=\"primary\" icon={<PlusOutlined/>}  onClick={this.onEditor.bind(this,undefined)}>新增</Button>\n                        </Col>\n                    </Row>\n                    </div>\n                    <div className='ds-table-wrap' style={{borderTop:\"1px solid #f0f0f0\"}}>\n                    <Row>\n                        <Col flex=\"250px\">\n                            <div style={{marginTop:12}}>\n                                <ModuleTreeView onSelect={this.onSelectNode} ref={this.moduleTreeRef}></ModuleTreeView>\n                            </div>\n                        </Col>\n                        <Col flex=\"auto\">\n                            <DSTable columns={columns} searchCondition={searchCondition} path={'/api/resource/find'} ref={this.tableRef}></DSTable>\n                        </Col>\n                    </Row>\n                    \n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n        );\n    }\n}\nexport default ResourceView;","import React,{DSComponent,Fragment,post} from 'comp/index';\nimport './index.less'\n\nimport { Form,Input,Modal,Select,message} from 'antd';\n\nclass RoleFormView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.formRef = React.createRef();\n        this.state = {dialog:false};\n    }\n    static defaultProps = {\n        formData:{id:\"\",name:\"\",code:\"\",level:\"11\"},\n        formType:{add:{name:\"新增角色\",code:\"1\"},update:{name:\"修改角色\",code:\"2\"}},\n        reloadTable:()=>{}\n    }\n    onEditor=(item)=>{\n        const type = item===undefined?\"1\":\"2\";\n        this.setState(state=>{\n            state.dialog = true;\n            state.formStatus = type;\n            if(type===this.props.formType.add.code){\n                state.dialogTitle = this.props.formType.add.name;\n            }\n            if(type===this.props.formType.update.code){\n                state.dialogTitle = this.props.formType.update.name;\n            }\n            return state;\n        },()=>{\n            if(type===this.props.formType.add.code){\n                const {formData} = this.props;\n                this.formRef.current.setFieldsValue(formData);\n            }\n            if(type===this.props.formType.update.code){\n                this.formRef.current.setFieldsValue(item);\n            }\n        });\n    }\n    onCannel=()=>{\n        this.setState(state=>{\n            state.dialog = false;\n            state.formData = null;\n            return state;\n        });\n    }\n    onSaveOrUpdate=async(e)=>{\n        const {id,name,code,level} = e;\n        const {formStatus} = this.state;\n        let path = \"/api/role/save\";\n        let content = {};\n        if(formStatus===this.props.formType.add.code){\n            content = {name:name,code:code,level:level};\n        }\n        if(formStatus===this.props.formType.update.code){\n            path = \"/api/role/modify\";\n            content = {id:id,name:name,code:code,level:level};\n        }\n        const params = new FormData();\n        params.append(\"content\", JSON.stringify(content));\n        const response = await post(path,params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            message.success(response.message);\n        }\n        this.setState(state=>{\n            state.dialog = false;\n            state.formData = null;\n            return state;\n        },()=>{\n            this.props.reloadTable();\n        });\n    }\n    render(){\n        const {dialog,formData,dialogTitle} = this.state;\n        return (\n        <Fragment>\n            <Modal\n                title={dialogTitle}\n                visible={dialog}\n                okButtonProps={{htmlType: 'submit', form: '_form'}}\n                onCancel={this.onCannel}\n                okText=\"确认\"\n                cancelText=\"取消\">\n                <Form id=\"_form\" layout=\"vertical\" ref={this.formRef} initialValues={formData} onFinish={this.onSaveOrUpdate}>\n                    <Form.Item name=\"id\" label=\"编号\" noStyle hidden={true}>\n                        <Input placeholder=\"\"  autoComplete=\"off\"/>\n                    </Form.Item>\n                    <Form.Item name=\"name\" label=\"名称\" rules={[{ required: true, message: '名称不能为空' }]}>\n                        <Input placeholder=\"\"  autoComplete=\"off\"/>\n                    </Form.Item>\n                    <Form.Item name=\"code\" label=\"编码\" rules={[{ required: true, message: '编码不能为空' }]}>\n                        <Input placeholder=\"\"  autoComplete=\"off\"/>\n                    </Form.Item>\n                    <Form.Item name=\"level\" label=\"等级\" rules={[{ required: true, message: '等级不能为空' }]}>\n                        <Select>\n                            <Select.Option value=\"31\">普通角色</Select.Option>\n                            <Select.Option value=\"21\">商戶角色</Select.Option>\n                            <Select.Option value=\"11\">系統角色</Select.Option>\n                        </Select>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </Fragment>\n        );\n    }\n}\nexport default RoleFormView;","import React,{DSTable,DSComponent,Fragment,post} from 'comp/index';\nimport './index.less'\n\nimport { Form,Input, Button,Row,Col,Breadcrumb,message,Space} from 'antd';\nimport {PlusOutlined } from '@ant-design/icons';\nimport RoleFormView from 'views/manager/role/form';\nclass RoleView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.formRef = React.createRef();\n        this.tableRef = React.createRef();\n        this.searchFormRef = React.createRef();\n        this.state = {searchCondition:props.searchCondition};\n    }\n    static defaultProps = {\n        searchCondition:{}\n    }\n    onSearch=async(e)=>{\n        this.setState(state=>{\n            state.searchCondition = e;\n            return state;\n        },()=>{\n            this.tableRef.current.reload();//刷新表单\n        });\n    }\n    onReset=()=>{\n        const {searchCondition} = this.props;\n        this.setState(state=>{\n            state.searchCondition = searchCondition;\n            return state;\n        },()=>{\n            this.searchFormRef.current.resetFields();//重置搜索\n            this.tableRef.current.reload();//刷新表单\n        });\n    }\n    onDelete=async(e)=>{\n        const params = new FormData();\n        params.append(\"id\", e.id);\n        const response = await post(\"/api/role/delete\",params).catch(error => {\n            message.error(error.message);\n        });\n        if(response){\n            message.success(response.message);\n            this.onReload();\n        }\n    }\n    onEditor=(item)=>{\n        this.formRef.current.onEditor(item);\n    }\n    onReload=()=>{\n        this.tableRef.current.reload();\n    }\n    render(){\n        const {searchCondition} = this.state;\n        const columns=[\n        {title: '名称',dataIndex: 'name'},\n        {title: '编码',dataIndex: 'code'},\n        {title: '等级',dataIndex: 'level',render:(value,item,index)=>{\n            if(value===\"31\")return \"普通角色\";\n            if(value===\"21\")return \"商戶角色\";\n            if(value===\"11\")return \"系統角色\";\n            return value;\n        }},\n        {title: '操作',width:160,render:(value,item,index)=>{\n            return (\n            <Space>\n                <Button type=\"link\" onClick={this.onEditor.bind(this,item)}>编辑</Button>\n                <Button type=\"link\" onClick={this.onDelete.bind(this,item)}>删除</Button>\n            </Space>\n            );\n        }}];\n        \n        return (\n        <Fragment>\n            <RoleFormView ref={this.formRef} reloadTable={this.onReload}></RoleFormView>\n            <div className='ds-back-layout'>\n                <Breadcrumb className='ds-crumb'>\n                    <Breadcrumb.Item>首页</Breadcrumb.Item>\n                    <Breadcrumb.Item>角色管理</Breadcrumb.Item>\n                </Breadcrumb>\n                <div className='ds-search'>\n                    <div className='ds-search-title'>\n                        <Row wrap={false}>\n                            <Col flex=\"auto\">数据筛选</Col>\n                            {/* <Col flex=\"100px\" style={{textAlign:'right'}}>高级搜索</Col> */}\n                        </Row>\n                    </div>\n                    <div className='ds-search-wrap'>\n                        <Form layout=\"inline\" ref={this.searchFormRef} initialValues={searchCondition} onFinish={this.onSearch}>\n                            <Form.Item name=\"name\" label=\"名称\">\n                                <Input placeholder=\"\" autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\">搜索</Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button onClick = {this.onReset}>重置</Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n\n                <div className='ds-table'>\n                    <div className='ds-table-title'>\n                    <Row wrap={false}>\n                        <Col flex=\"auto\">数据列表</Col>\n                        <Col flex=\"100px\" style={{textAlign:'right'}}>\n                            <Button type=\"primary\" icon={<PlusOutlined/>} onClick={this.onEditor}>新增</Button>\n                        </Col>\n                    </Row>\n                    </div>\n                    <div className='ds-table-wrap'>\n                        <DSTable columns={columns} searchCondition={searchCondition} path={'/api/role/find'} ref={this.tableRef}></DSTable>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n        );\n    }\n}\nexport default RoleView;","import React,{DSTable,DSComponent,Fragment} from 'comp/index';\nimport './index.less'\n\nimport { Form,Input, Button,Row,Col,Breadcrumb,Space} from 'antd';\nimport {PlusOutlined } from '@ant-design/icons';\nclass UserView extends DSComponent{   \n    constructor(props){\n        super(props);\n        this.tableRef = React.createRef();\n        this.searchFormRef = React.createRef();\n        this.state = {searchCondition:props.searchCondition};\n    }\n    static defaultProps = {\n        searchCondition:{}\n    }\n    onSearch=async(e)=>{\n        this.setState(state=>{\n            state.searchCondition = e;\n            return state;\n        },()=>{\n            this.tableRef.current.reload();//刷新表单\n        });\n    }\n    onReset=()=>{\n        const {searchCondition} = this.props;\n        this.setState(state=>{\n            state.searchCondition = searchCondition;\n            return state;\n        },()=>{\n            this.searchFormRef.current.resetFields();//重置搜索\n            this.tableRef.current.reload();//刷新表单\n        });\n    }\n    onReload=()=>{\n        this.tableRef.current.reload();\n    }\n    render(){\n        const {searchCondition} = this.state;\n        const columns=[\n        {title: '昵称',dataIndex: 'aliasName'},\n        {title: '账号',dataIndex: 'account'},\n        {title: '邮箱',dataIndex: 'email'},\n        {title: '手机',dataIndex: 'phone'},\n        {title: '状态',dataIndex: 'status'},\n        {title: '最后一次登录',dataIndex: 'lastLoginIp'},\n        {title: '操作',width:160,render:(value,item,index)=>{\n            return (\n            <Space>\n                <Button type=\"link\" >详情</Button>\n                <Button type=\"link\" >冻结</Button>\n                <Button type=\"link\" >重置</Button>\n                <Button type=\"link\" >删除</Button>\n            </Space>\n            );\n        }}];\n        \n        return (\n        <Fragment>\n            <div className='ds-back-layout'>\n                <Breadcrumb className='ds-crumb'>\n                    <Breadcrumb.Item>首页</Breadcrumb.Item>\n                    <Breadcrumb.Item>用户管理</Breadcrumb.Item>\n                </Breadcrumb>\n                <div className='ds-search'>\n                    <div className='ds-search-title'>\n                        <Row wrap={false}>\n                            <Col flex=\"auto\">数据筛选</Col>\n                            {/* <Col flex=\"100px\" style={{textAlign:'right'}}>高级搜索</Col> */}\n                        </Row>\n                    </div>\n                    <div className='ds-search-wrap'>\n                        <Form layout=\"inline\" ref={this.searchFormRef} initialValues={searchCondition} onFinish={this.onSearch}>\n                            <Form.Item name=\"name\" label=\"名称\">\n                                <Input placeholder=\"\" autoComplete=\"off\"/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\">搜索</Button>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button onClick = {this.onReset}>重置</Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n\n                <div className='ds-table'>\n                    <div className='ds-table-title'>\n                    <Row wrap={false}>\n                        <Col flex=\"auto\">数据列表</Col>\n                        <Col flex=\"100px\" style={{textAlign:'right'}}>\n                            <Button type=\"primary\" icon={<PlusOutlined/>}>新增</Button>\n                        </Col>\n                    </Row>\n                    </div>\n                    <div className='ds-table-wrap'>\n                        <DSTable columns={columns} searchCondition={searchCondition} path={'/api/user/find'} ref={this.tableRef}></DSTable>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n        );\n    }\n}\nexport default UserView;"],"names":["LoginView","props","loginAccount","componentDidMount","initTHREEBg","componentDidUpdate","container","camera","scene","renderer","particles","particle","SEPARATION","count","mouseX","mouseY","windowHalfX","window","innerWidth","windowHalfY","innerHeight","onWindowResize","aspect","updateProjectionMatrix","setSize","onDocumentMouseMove","event","clientX","clientY","onDocumentTouchStart","touches","length","preventDefault","pageX","pageY","onDocumentTouchMove","render","position","x","y","lookAt","i","ix","iy","Math","sin","scale","kk","document","createElement","bgRef","current","appendChild","THREE","z","material","map","load","process","color","AMOUNTX","AMOUNTY","add","antialias","alpha","setClearAlpha","domElement","addEventListener","init","animate","requestAnimationFrame","onChangeType","formType","e","setState","state","formStatus","errorMessage","onClickCaptcha","type","use","params","FormData","append","loginFormRef","getFieldsValue","account","_account","regeditFormRef","resetFormRef","undefined","message","post","catch","error","response","results","check","token","captchShow","liked","LOGIN_TOKEN","REGEDIT_TOKEN","RESET_PASSWORD_TOKEN","onCountDown","onCaptchaSubmit","v","clearTimeout","_execute","setTimeout","onLogin","password","remember","localStorage","setItem","removeItem","sessionStorage","location","href","DSBase","onRegedit","alias","checkCode","agree","data","JSON","stringify","onReset","React","loginRemember","getItem","needCaptcha","this","console","log","title","className","centered","maskClosable","visible","width","onCancel","closable","footer","layout","size","onFinish","label","required","tooltip","wrap","flex","name","rules","noStyle","placeholder","maxLength","style","allowClear","autoComplete","preview","height","src","htmlType","ref","initialValues","icon","InfoCircleOutlined","gutter","onClick","bind","disabled","valuePropName","target","rel","DSComponent","DefaultView","Search","Input","CheckableTag","Tag","sharedOnCell","_","index","CaseView","onChangePagination","pageNo","columns","dataIndex","value","item","onCell","margin","padding","minHeight","background","paddingBottom","enterButton","onSearch","DSID","paddingLeft","url","element","direction","display","checked","marginTop","dataSource","id","bordered","pagination","onChange","rowKey","record","NewCaseView","ModuleTreeView","onLoad","unSelect","selectedKeys","onSelect","keys","node","loadData","expendNode","module","key","children","moduleSource","renderSource","list","_children","moduleId","isLeaf","treeData","defaultProps","ModuleFormView","onEditor","dialog","code","dialogTitle","update","formData","formRef","setFieldsValue","moduleName","_params","Object","assign","onCannel","onSaveOrUpdate","path","_path","content","reloadTable","okButtonProps","form","okText","cancelText","hidden","pId","ModuleView","searchCondition","tableRef","reload","searchFormRef","resetFields","moduleTreeRef","onDelete","onReload","onSelectNode","textAlign","PlusOutlined","borderTop","RoleResourceFormView","condition","roleId","ListRef","keyList","items","bodyStyle","overflowY","other","MenuTreeView","expandedKeys","loadedKeys","menuId","roleCode","onExpand","image","Empty","selectable","RoleMenuFormView","menuTreeRef","selected","nodeSelect","nodeItem","_formData","pname","onValuesChange","field","a","fieldName","fieldValue","sourceType","serialNumber","pid","onFormTypeChange","onDeleteNode","onMenuCopy","placement","onConfirm","RoleResourceView","formMenuRef","UserRoleFormView","userId","roleName","renderItem","UserRoleView","ResourceFormView","ResourceView","RoleFormView","level","RoleView","UserView"],"sourceRoot":""}